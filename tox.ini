; Settings for flake8 (see also: https://flake8.pycqa.org/en/latest/user/options.html)
[flake8]
count = True
exclude = src/migrations
enable-extensions = G
extend-exclude = .git/,.serverless/,.venv/,node_modules/
ignore = 
    A003    ; Ignore check: 'id' is a python builtin, consider renaming the class attribute
    G004    ; Ignore check: logging statement uses f-string
    I900    ; Ignore check: module not listed as a requirement
    IF100   ; Ignore check: don`t use "[on_true] if [expression] else [on_false]" syntax
    PT004   ; Ignore check: fixture does not return anything, add leading underscore
    S101    ; Ignore check: use of assert detected
    N815    ; Ignore check: variable in class scope should not be mixedCase
max-annotations-complexity = 3
max-cognitive-complexity = 7
max-complexity = 10
max-expression-complexity = 14
max-doc-length = 500
max-line-length = 160
show-source = True
statistics = True

; Settings for isort (see also: https://pycqa.github.io/isort/docs/configuration/options/)
[isort]
default_section = THIRDPARTY
sections = FUTURE, STDLIB, THIRDPARTY, FIRSTPARTY, LOCALFOLDER

[pycodestyle]
ignore = E402
max-line-length = 160

[pytest]
addopts = --disable-warnings --cov=src --cov-config=tox.ini --cov-report=term --cov-report=html:.reports/unit_tests/pytest_cov/
testpaths = src
usefixtures = test_client
env_files = .env.test
env_override_existing_values = 1

[run]
omit =
    */conftest.py,
    *tests/*

[report]
exclude_lines =
    logging